---
title: "Grade Analysis Lab"
author: "Brian de Korodi"
format: html
editor: visual
keep-md: true
echo: FALSE
warning: false
---

```{r configuration}
#| message: false
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
```

## Question 1

```{r}
here::i_am("r-101-grade-analysis.Rproj")
here::i_am("grades.csv")
grades <- read.csv("grades.csv")
```

## Question 2

```{r}
exam_summary <-
  grades |>
  summarise("Mean grade" = mean(Exam, na.rm = TRUE),
                      "Median grade" = median(Exam, na.rm = TRUE),
                      "Lowest grade" = min(Exam, na.rm = TRUE),
                      "Highest grade" = max(Exam, na.rm = TRUE))
  
```

```{r}
knitr::kable(exam_summary, format = "markdown")
```

## Question 3

```{r}
missing_grades <- sum(is.na(grades$Exam))
```

```{r}
cat("There were", missing_grades,"students who did not take the final exam.")
```

## Question 4

```{r}
grades |>
  filter(!is.na(Exam)) |>
  ggplot(aes(x = Exam)) +
  geom_histogram(binwidth = 0.5, fill = "red") +
  labs(x = "Exam grades",
       y = "Frequency") +
  ggtitle("Distribution of exam grades")
```

## Question 5

```{r}
students_by_group <- 
  grades |>
  group_by(Group) |>
  summarise("Number_of_students" = n())
```

```{r}
knitr::kable(students_by_group)
```

## Question 6

```{r}
  students_by_group |>
    mutate('Group number' = gsub("grp_", "", students_by_group$Group)) |>
    ggplot(aes(x = `Group number`, y = `Number_of_students`)) +
    geom_bar(stat = "identity", fill = "red") +
    labs(title = "Number of students in each group",
         x = "Group number",
         y = "Number of students") 
```

## Question 7

If we consider the 'Exam' variable to be discrete, due to it taking only .0 or .5 values, we might plot the conditional distributions with a bar graph. Since there is a relatively large number of groups, it doesn't make sense to plot all the distributions on the same graph, so instead we can use a facet wrap:

```{r}
grades |>
  mutate('Group' = gsub("grp_", "", grades$Group)) |>
  filter(!is.na(Exam)) |>
  ggplot(aes(x = `Exam`, color = "red")) + 
  geom_bar() +
  labs(title = "Distribution of grades by group") +
  facet_wrap(~Group)
```

However, we see that when there is a large number of groups, the individual graphs are quite small, making it difficult to interpret. We can improve the readability by interpreting the variable as a continous one, thus using density functions instead of bar graphs. In practice it provides a solid, more readable overview of the general shape of the distribution for each group:

```{r}
grades |>
    mutate('Group' = gsub("grp_", "", grades$Group))|>
  filter(!is.na(Exam)) |>
  ggplot(aes(x = `Exam`, color = "red")) + 
  geom_density(alpha = 0.5) +
  labs(title = "Distribution of grades by group") +
  facet_wrap(~Group)
```

A better solution might be to use a box plot. It allows us to plot the distributions for each group side-by-side, which enables easier comparison:

```{r}
grades |>
    mutate('Group number' = gsub("grp_", "", grades$Group)) |>
  filter(!is.na(Exam)) |>
  ggplot(aes(x = `Group number`, y = `Exam`)) +
  geom_boxplot() +
  labs(title = "Distribution of grades by group",
       x = "Group number",
       y = "Grades")
```

The choice of which representation to use might depend on if one wants to compare between groups, or if one wants to simply be able to look up a specific group and get an idea for the general shape of its distribution.

## Question 8

## Question 9

## Question 10

```{r}
longgrades <- grades |>
  select(Id, Group, contains("MCQ"), Exam) |>
  pivot_longer(cols = c(Exam, contains("MCQ")), names_to = "name", values_to = "value")
```

## Question 11

```{r}
missingbystudent <- longgrades |>
  group_by(Id) |>
  summarise(Number_of_missing_grades = sum(is.na(value)))
knitr::kable(missingbystudent)
```

## Question 12

```{r}
ggplot(missingbystudent, aes(x = Id, y = Number_of_missing_grades)) +
  geom_col() +
  labs(title = "Number of missing grades per student",
       x = "Student ID", 
       y = "Number of missing grades")
```

## Question 13

```{r}
longmissedbygroup <- longgrades |>
  group_by(Group) |>
  filter(name=="Exam") |>
  summarise(Number_of_missed_exams = sum(is.na(value)))
knitr::kable(longmissedbygroup)
```

## Question 14

```{r}
longonlinemissingbystudent <- longgrades |>
  filter(str_starts(name, "Online")) |>  
  group_by(Id) |>
  summarise(Number_of_missing_online_grades = sum(is.na(value)))
knitr::kable(longonlinemissingbystudent)
```

## Question 15

```{r}
onlinemissing <- grades |> 
  select(Id, Exam, starts_with("Online")) |>
  rowwise() |>
  mutate(onlinemissing = sum(across(starts_with("Online"), is.na))) |>
  ungroup()
onlinemissing |> 
  filter(!is.na(Exam)) |>
  ggplot(aes(x = Exam, y = onlinemissing)) +
  geom_bar(stat = "identity") +
  labs(title = "Students' exam grades conditioned by how many online tests they missed",
       x = "Exam grades",
       y = "Number of missing online grades")
```
